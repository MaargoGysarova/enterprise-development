@page "/medicines"
@inject PharmacyApiClient ApiClient
@inject NavigationManager Navigation




<h3>Medicines</h3>

@if (Medicines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Product Group</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var medicine in Medicines)
            {
                <tr>
                    <td>@medicine.Name</td>
                    <td>@medicine.ProductGroup</td>
                    <td>@medicine.Quantity</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditMedicine(medicine.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteMedicine(medicine.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-success" @onclick="AddMedicine">Add New Medicine</button>
}

@code {
    private List<MedicineGetDto>? Medicines;

    protected override async Task OnInitializedAsync()
    {
        await LoadMedicines();
    }

    private async Task LoadMedicines()
    {
        try
        {
            Medicines = (await ApiClient.GetAllMedicinesAsync()).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading medicines: {ex.Message}");
        }
    }

    private void AddMedicine()
    {
        Navigation.NavigateTo("/medicines/create");
    }

    private void EditMedicine(int id)
    {
        Navigation.NavigateTo($"/medicines/edit/{id}");
    }

    private async Task DeleteMedicine(int id)
    {
        try
        {
            await ApiClient.DeleteMedicineAsync(id);
            await LoadMedicines();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting medicine: {ex.Message}");
        }
    }
}
