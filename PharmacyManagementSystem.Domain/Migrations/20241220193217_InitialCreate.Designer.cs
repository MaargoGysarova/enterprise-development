// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmacyManagementSystem.Domain.Data;

#nullable disable

namespace PharmacyManagementSystem.Domain.Migrations
{
    [DbContext(typeof(PharmacyDbContext))]
    [Migration("20241220193217_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PharmacyManagementSystem.Domain.Medicine", b =>
                {
                    b.Property<int>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PharmaceuticalGroups")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductGroup")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("MedicineId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("PharmacyManagementSystem.Domain.Pharmacy", b =>
                {
                    b.Property<int>("PharmacyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DirectorFullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("PharmacyId");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("PharmacyManagementSystem.Domain.PriceList", b =>
                {
                    b.Property<int>("PriceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentConditions")
                        .HasColumnType("int");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext");

                    b.HasKey("PriceListId");

                    b.HasIndex("MedicineId")
                        .IsUnique();

                    b.HasIndex("PharmacyId");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("PharmacyManagementSystem.Domain.PriceList", b =>
                {
                    b.HasOne("PharmacyManagementSystem.Domain.Medicine", "Medicine")
                        .WithOne()
                        .HasForeignKey("PharmacyManagementSystem.Domain.PriceList", "MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyManagementSystem.Domain.Pharmacy", "Pharmacy")
                        .WithMany("PriceLists")
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Pharmacy");
                });

            modelBuilder.Entity("PharmacyManagementSystem.Domain.Pharmacy", b =>
                {
                    b.Navigation("PriceLists");
                });
#pragma warning restore 612, 618
        }
    }
}
